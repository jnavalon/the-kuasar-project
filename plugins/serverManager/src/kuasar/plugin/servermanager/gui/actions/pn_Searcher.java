/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * pn_Searcher.java
 *
 * Created on 19/06/2011, 22:37:54
 */
package kuasar.plugin.servermanager.gui.actions;

import java.net.InterfaceAddress;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus Navalon i Pastor <jnavalon at redhermes dot net>
 */
public class pn_Searcher extends kuasar.plugin.classMod.AbstractPanel {
    List<InterfaceAddress> ias = null;
    DefaultTableModel tableModel=createTableModel();
    boolean checkUser;
    String user;
    char[] pass;
    String keyStore;
    char[] kspass;
    boolean dnie;
    int port;
    /** Creates new form pn_Searcher */
    public pn_Searcher(List<InterfaceAddress> ias,int port, String keystore, char[] kspass, boolean dnie, String user, char[] pass, boolean checkUser) {
        this.checkUser=checkUser;
        this.user=user;
        this.pass = pass;
        this.keyStore=keystore;
        this.kspass=kspass;
        this.dnie=dnie;
        this.ias = ias;
        this.port=port;
        initComponents();
        spn_Servers.getViewport().setOpaque(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spn_Servers = new javax.swing.JScrollPane();
        tbl_Servers = new javax.swing.JTable();
        pb_Progress = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();
        lbl_log = new javax.swing.JLabel();
        spn_log = new javax.swing.JScrollPane();
        txa_log = new javax.swing.JTextArea();

        spn_Servers.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spn_Servers.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        spn_Servers.setOpaque(false);

        tbl_Servers.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tbl_Servers.setModel(tableModel);
        tbl_Servers.setOpaque(false);
        spn_Servers.setViewportView(tbl_Servers);

        jButton1.setText("Save");

        lbl_log.setForeground(new java.awt.Color(204, 204, 204));
        lbl_log.setText("Log:");

        txa_log.setColumns(20);
        txa_log.setEditable(false);
        txa_log.setRows(5);
        spn_log.setViewportView(txa_log);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spn_log, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(spn_Servers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pb_Progress, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(lbl_log))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(spn_Servers, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_log)
                .addGap(4, 4, 4)
                .addComponent(spn_log)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(pb_Progress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lbl_log;
    private javax.swing.JProgressBar pb_Progress;
    private javax.swing.JScrollPane spn_Servers;
    private javax.swing.JScrollPane spn_log;
    private javax.swing.JTable tbl_Servers;
    private javax.swing.JTextArea txa_log;
    // End of variables declaration//GEN-END:variables
    protected void startSearch(){
        th_Scan scan = new th_Scan(this);
        scan.start();
    }
    private DefaultTableModel createTableModel(){
         return new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hostname", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

        @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

        @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    }
    protected void addServer(String name, String IP){
        tableModel.addRow(new Object[]{name,IP});
    }
    protected void setMaxProgress(int max){
        pb_Progress.setMaximum(max);
    }
    protected void setProgress(int progress){
        pb_Progress.setValue(progress);
    }
    protected List<InterfaceAddress> getInterfaces(){
        return ias;
    }
    protected void addLog(String message){
        txa_log.append(message + "\n");
        txa_log.setCaretPosition(txa_log.getText().length());
    }
}
